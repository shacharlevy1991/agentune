name: Publish agentune-simulate to PyPI

on:
  push:
    tags:
      - 'simulate-v*'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      id: setup-python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: "2.0.1"
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    
    - name: Install dependencies
      run: |
        cd agentune_simulate
        poetry install --sync --no-interaction
    
    - name: Run linting
      run: |
        cd agentune_simulate
        poetry run ruff check agentune/
    
    - name: Run type checking
      run: |
        cd agentune_simulate
        poetry run mypy agentune/
    
    - name: Run tests
      run: |
        cd agentune_simulate
        poetry run pytest

  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      id: setup-python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: "2.0.1"
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    
    - name: Install dependencies
      run: |
        cd agentune_simulate
        poetry install --sync --no-interaction
    
    - name: Get version from tag
      id: get_version
      run: echo "version=${GITHUB_REF#refs/tags/simulate-v}" >> $GITHUB_OUTPUT
    
    - name: Update version in pyproject.toml
      run: |
        cd agentune_simulate
        poetry version ${{ steps.get_version.outputs.version }}
    
    - name: Build package
      run: |
        cd agentune_simulate
        poetry build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: agentune_simulate/dist/

  publish:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: release
      url: https://pypi.org/p/agentune-simulate
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist-files
        path: dist/
    
    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        print-hash: true